// Generated from player/lua/assdraw.lua

"local ass_mt = {}\n"
"ass_mt.__index = ass_mt\n"
"\n"
"local function ass_new()\n"
"    return setmetatable({ scale = 4, text = \"\" }, ass_mt)\n"
"end\n"
"\n"
"function ass_mt.new_event(ass)\n"
"    -- osd_libass.c adds an event per line\n"
"    if #ass.text > 0 then\n"
"        ass.text = ass.text .. \"\\n\"\n"
"    end\n"
"end\n"
"\n"
"function ass_mt.draw_start(ass)\n"
"    ass.text = string.format(\"%s{\\\\p%d}\", ass.text, ass.scale)\n"
"end\n"
"\n"
"function ass_mt.draw_stop(ass)\n"
"    ass.text = ass.text .. \"{\\\\p0}\"\n"
"end\n"
"\n"
"function ass_mt.coord(ass, x, y)\n"
"    local scale = 2 ^ (ass.scale - 1)\n"
"    local ix = math.ceil(x * scale)\n"
"    local iy = math.ceil(y * scale)\n"
"    ass.text = string.format(\"%s %d %d\", ass.text, ix, iy)\n"
"end\n"
"\n"
"function ass_mt.append(ass, s)\n"
"    ass.text = ass.text .. s\n"
"end\n"
"\n"
"function ass_mt.merge(ass1, ass2)\n"
"    ass1.text = ass1.text .. ass2.text\n"
"end\n"
"\n"
"function ass_mt.pos(ass, x, y)\n"
"    ass:append(string.format(\"{\\\\pos(%f,%f)}\", x, y))\n"
"end\n"
"\n"
"function ass_mt.an(ass, an)\n"
"    ass:append(string.format(\"{\\\\an%d}\", an))\n"
"end\n"
"\n"
"function ass_mt.move_to(ass, x, y)\n"
"    ass:append(\" m\")\n"
"    ass:coord(x, y)\n"
"end\n"
"\n"
"function ass_mt.line_to(ass, x, y)\n"
"    ass:append(\" l\")\n"
"    ass:coord(x, y)\n"
"end\n"
"\n"
"function ass_mt.bezier_curve(ass, x1, y1, x2, y2, x3, y3)\n"
"    ass:append(\" b\")\n"
"    ass:coord(x1, y1)\n"
"    ass:coord(x2, y2)\n"
"    ass:coord(x3, y3)\n"
"end\n"
"\n"
"\n"
"function ass_mt.rect_ccw(ass, x0, y0, x1, y1)\n"
"    ass:move_to(x0, y0)\n"
"    ass:line_to(x0, y1)\n"
"    ass:line_to(x1, y1)\n"
"    ass:line_to(x1, y0)\n"
"end\n"
"\n"
"function ass_mt.rect_cw(ass, x0, y0, x1, y1)\n"
"    ass:move_to(x0, y0)\n"
"    ass:line_to(x1, y0)\n"
"    ass:line_to(x1, y1)\n"
"    ass:line_to(x0, y1)\n"
"end\n"
"\n"
"function ass_mt.round_rect_cw(ass, x0, y0, x1, y1, r)\n"
"    local c = 0.551915024494 * r -- circle approximation\n"
"    ass:move_to(x0 + r, y0)\n"
"    ass:line_to(x1 - r, y0) -- top line\n"
"    if r > 0 then\n"
"        ass:bezier_curve(x1 - r + c, y0, x1, y0 + r - c, x1, y0 + r) -- top right corner\n"
"    end\n"
"    ass:line_to(x1, y1 - r) -- right line\n"
"    if r > 0 then\n"
"        ass:bezier_curve(x1, y1 - r + c, x1 - r + c, y1, x1 - r, y1) -- bottom right corner\n"
"    end\n"
"    ass:line_to(x0 + r, y1) -- bottom line\n"
"    if r > 0 then\n"
"        ass:bezier_curve(x0 + r - c, y1, x0, y1 - r + c, x0, y1 - r) -- bottom left corner\n"
"    end\n"
"    ass:line_to(x0, y0 + r) -- left line\n"
"    if r > 0 then\n"
"        ass:bezier_curve(x0, y0 + r - c, x0 + r - c, y0, x0 + r, y0) -- top left corner\n"
"    end\n"
"end\n"
"\n"
"return {ass_new = ass_new}\n"
